<?xml version="1.0" encoding="utf-8" ?>
<TabbedPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
            xmlns:vm="clr-namespace:EarphoneLeftAndRight.ViewModels"
            xmlns:vc="clr-namespace:EarphoneLeftAndRight.ValueConverters"
             xmlns:r="clr-namespace:EarphoneLeftAndRight.Resx"
            xmlns:local="clr-namespace:EarphoneLeftAndRight.Views"
            
             x:Class="EarphoneLeftAndRight.Views.BeepTabbed"
            BarBackgroundColor="{AppThemeBinding Default={StaticResource PrimaryLight},Light={StaticResource PrimaryLight},Dark={StaticResource PrimaryDark}}"
            Title="{x:Static r:AppResources.Sound_Title}"
            >
    <TabbedPage.Resources>
        <vc:BooleanToStringValueConverter x:Key="vc_b2c"/>
        <vc:LogValueConverter x:Key="vc_log"/>
        <ControlTemplate x:Key="RadioButtonTemplateWaves">
            <!-- https://docs.microsoft.com/xamarin/xamarin-forms/user-interface/radiobutton#redefine-radiobutton-appearance -->
            <Frame HasShadow="true" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" BackgroundColor="Transparent">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CheckedStates">
                            <VisualState x:Name="Checked">
                                <VisualState.Setters>
                                    <Setter Property="BorderColor" Value="Accent"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Unchecked">
                                <VisualState.Setters>
                                    <Setter Property="BorderColor" Value="Transparent"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </VisualStateManager.VisualStateGroups>
                <Grid Margin="0">
                    <ContentPresenter Margin="0"/>
                </Grid>
            </Frame>
        </ControlTemplate>
    </TabbedPage.Resources>
    <ContentPage Title="{x:Static r:AppResources.Sound_Tune_Title}" BackgroundColor="{AppThemeBinding Default=White,Light=White,Dark=Black}">
        <ContentPage.ToolbarItems>
            <!-- not working -->
            <!-- https://github.com/xamarin/Xamarin.Forms/issues/7351 -->
            <!--<ToolbarItem Command="{Binding SetPianoVisibleCommand}" CommandParameter="Toggle">
                <ToolbarItem.IconImageSource>
                    <FontImageSource FontFamily="Material" Glyph="{Binding IsPianoVisible,Converter={StaticResource vc_b2c},ConverterParameter=&#xe521;:&#xe520;}" />
                </ToolbarItem.IconImageSource>
            </ToolbarItem>-->
        </ContentPage.ToolbarItems>
        <ContentPage.BindingContext>
            <vm:BeepFreqViewModel />
        </ContentPage.BindingContext>
        <ScrollView VerticalScrollBarVisibility="Default" Orientation="Vertical">
            <StackLayout>
                <local:AdDefaultView HeightRequest="51" HorizontalOptions="Fill"  WidthRequest="320" />
                <Label FontSize="Large" Text="{x:Static r:AppResources.Word_Frequency}" Margin="10"/>
                <Slider Grid.Column="1" Maximum="{Binding FrequencyMaximum,Converter={x:StaticResource vc_log}}" Minimum="{Binding FrequencyMinimum,Converter={x:StaticResource vc_log}}"
                        Value="{Binding FrequencyRounded,Converter={x:StaticResource vc_log}}" Margin="0,10,0,10"/>
                <Grid Margin="10,0,10,10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Button Grid.Column="0" Text="-10" Command="{Binding AddFrequencyCommand}" CommandParameter="-10"/>
                    <Button Grid.Column="1" Text="-1" Command="{Binding AddFrequencyCommand}" CommandParameter="-1"/>
                    <Button Grid.Column="3" Text="+1" Command="{Binding AddFrequencyCommand}" CommandParameter="1"/>
                    <Button Grid.Column="4" Text="+10" Command="{Binding AddFrequencyCommand}" CommandParameter="10"/>
                    <Label Grid.Column="2" Text="{Binding FrequencyHumanReadable}" VerticalOptions="Center" HorizontalOptions="Center" InputTransparent="True" 
                           Opacity="{Binding Source={x:Reference entryFreq},Path=IsFocused,Converter={x:StaticResource vc_b2c},ConverterParameter=0:1}"
                           />
                    <Entry x:Name="entryFreq"
                        Grid.Column="2" Opacity="{Binding Source={RelativeSource Self},Path=IsFocused,Converter={x:StaticResource vc_b2c},ConverterParameter=1:0}" 
                           Text="{Binding Frequency}"
                           Keyboard="Numeric"
                           />

                    <Button Grid.Column="1" Grid.Row="1" Text="-" Command="{Binding MultiplyFrequencyCommand}" CommandParameter="-1" />
                    <Button Grid.Column="0" Grid.Row="1" Text="8vb" Command="{Binding MultiplyFrequencyCommand}" CommandParameter="-12" />
                    <Button Grid.Column="4" Grid.Row="1" Text="8va" Command="{Binding MultiplyFrequencyCommand}" CommandParameter="+12" />
                    <Button Grid.Column="3" Grid.Row="1" Text="+" Command="{Binding MultiplyFrequencyCommand}" CommandParameter="+1"/>
                    <StackLayout Orientation="Vertical" VerticalOptions="Center" HorizontalOptions="FillAndExpand" Grid.Row="1" Grid.Column="2">
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped_ChangeLocalizationMode" />
                        </StackLayout.GestureRecognizers>
                        <Label Text="{Binding FrequencyName}" HorizontalOptions="Center" InputTransparent="True"/>
                        <Label Text="{Binding FrequencyNameCent}" HorizontalOptions="Center" InputTransparent="True"/>
                    </StackLayout>

                    <Button Grid.Column="0" Grid.Row="2" Text="-10" Command="{Binding MultiplyFrequencyCommand}" CommandParameter="-0.10"/>
                    <Button Grid.Column="1" Grid.Row="2" Text="-1" Command="{Binding MultiplyFrequencyCommand}" CommandParameter="-0.01"/>
                    <Button Grid.Column="2" Grid.Row="2" Text="{Binding LocalizedCentP0}" Command="{Binding SetCentCommand}" CommandParameter="0"/>
                    <Button Grid.Column="3" Grid.Row="2" Text="+1" Command="{Binding MultiplyFrequencyCommand}" CommandParameter="+0.01"/>
                    <Button Grid.Column="4" Grid.Row="2" Text="+10" Command="{Binding MultiplyFrequencyCommand}" CommandParameter="+0.10"/>
                </Grid>
                <local:PianoView KeyWidth="40" HeightRequest="90" IsVisible="{Binding IsPianoVisible}" KeyTapped="PianoView_KeyTapped"/>
                <Grid RadioButtonGroup.GroupName="waveKind" RadioButtonGroup.SelectedValue="{Binding WaveKind}">
                    <Grid.Resources>
                        <Style TargetType="RadioButton">
                            <Setter Property="ControlTemplate" Value="{StaticResource RadioButtonTemplateWaves}"/>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <RadioButton Grid.Column="0" Value="{Binding WaveKindCandidates[0]}" IsChecked="True">
                        <RadioButton.Content>
                            <Image HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                                <Image.Source>
                                    <FontImageSource FontFamily="WaveIcons" Glyph="0" Color="{AppThemeBinding Light=Black,Default=Black,Dark=White}" />
                                </Image.Source>
                            </Image>
                        </RadioButton.Content>
                    </RadioButton>
                    <RadioButton Grid.Column="1" Value="{Binding WaveKindCandidates[1]}">
                        <RadioButton.Content>
                            <Image>
                                <Image.Source>
                                    <FontImageSource FontFamily="WaveIcons" Glyph="3" Color="{AppThemeBinding Light=Black,Default=Black,Dark=White}"/>
                                </Image.Source>
                            </Image>
                        </RadioButton.Content>
                    </RadioButton>
                    <RadioButton Grid.Column="2" Value="{Binding WaveKindCandidates[2]}">
                        <RadioButton.Content>
                            <Image ScaleY="-1">
                                <Image.Source>
                                    <FontImageSource FontFamily="WaveIcons" Glyph="2" Color="{AppThemeBinding Light=Black,Default=Black,Dark=White}"/>
                                </Image.Source>
                            </Image>
                        </RadioButton.Content>
                    </RadioButton>
                    <RadioButton Grid.Column="3" Value="{Binding WaveKindCandidates[3]}">
                        <RadioButton.Content>
                            <Image>
                                <Image.Source>
                                    <FontImageSource FontFamily="WaveIcons" Glyph="1" Color="{AppThemeBinding Light=Black,Default=Black,Dark=White}"/>
                                </Image.Source>
                            </Image>
                        </RadioButton.Content>
                    </RadioButton>
                </Grid>
                <Label FontSize="Large" Text="{x:Static r:AppResources.Word_Balance}" Margin="10"/>
                <Slider Minimum="-1" Maximum="1" Value="{Binding Balance}" Margin="0,10,0,10"/>
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Text="{x:Static r:LocalResources.Left}" Command="{Binding SetBalanceCommand}" CommandParameter="-1" />
                    <Button Grid.Column="1" Text="{x:Static r:AppResources.Word_Center}" Command="{Binding SetBalanceCommand}" CommandParameter="0" />
                    <Button Grid.Column="2" Text="{x:Static r:LocalResources.Right}" Command="{Binding SetBalanceCommand}" CommandParameter="1" />
                </Grid>
                <ScrollView Orientation="Horizontal">
                    <StackLayout Orientation="Horizontal" Margin="10">
                        <CheckBox IsChecked="{Binding OppositePhase}"  VerticalOptions="Center" />
                        <Label Text="{x:Static r:AppResources.Sound_Tune_OppositePhase}" VerticalOptions="Center" />
                        <CheckBox IsChecked="{Binding JustIntonation}" VerticalOptions="Center" />
                        <Label Text="{x:Static r:AppResources.Sound_Tune_JustIntonation}" VerticalOptions="Center" />
                    </StackLayout>
                </ScrollView>
                <Button Text="{x:Static r:AppResources.Word_Play_Sound}" Margin="10" Command="{Binding PlayCommand}" IsVisible="{Binding IsPlaying,Converter={x:StaticResource vc_b2c},ConverterParameter=False:True}" />
                <Button Text="{x:Static r:AppResources.Word_Stop_Sound}" Margin="10" Command="{Binding StopCommand}" IsVisible="{Binding IsPlaying}" />
            </StackLayout>
        </ScrollView>
    </ContentPage>
    <ContentPage Title="Piano">

    </ContentPage>
</TabbedPage>